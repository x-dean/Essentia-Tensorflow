services:
  postgres:
    image: postgres:15
    container_name: playlist-postgres
    environment:
      - POSTGRES_DB=playlist_db
      - POSTGRES_USER=playlist_user
      - POSTGRES_PASSWORD=playlist_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/postgres:/var/lib/postgresql/logs
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U playlist_user -d playlist_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  playlist-app:
    build:
      context: .
      dockerfile: Dockerfile.app
    container_name: playlist-app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://playlist_user:playlist_password@postgres:5432/playlist_db
    volumes:
      # Logs mount points
      - ./logs:/app/logs
      
      # Music and audio mount points
      - ${MUSIC_DIRECTORY:-C:/Users/Dean/Documents/test_music}:/music:ro
      - ${AUDIO_DIRECTORY:-./audio}:/audio:ro
      - ${EXTRA_MUSIC_DIRS:-./extra_music}:/extra_music:ro
      
      # Application data mount points
      - ./data:/app/data
      - ./cache:/app/cache
      
      # Configuration mount points
      - ./config:/app/config
      
      # Development mount points (optional)
      # - ./src:/app/src:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
